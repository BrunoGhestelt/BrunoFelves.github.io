1-A primeira coisa que fazemos ao inciar o projeto é definir a estrutura incial do arquivo html, linkando o arquivo css e definindo o viewport.
2-Depois, por questões de organização, separamos o .css em várias partições para cada seção do site, tornando todo o código mais legivel e simples.
-- Para fazer isto, primeiro linkamos o .css principal no html, e dentro do .css importamos as outras seções por meio do ``  @import"./caminho" ``;
3-Podemos então, criar um .css global, onde definimos todas as configurações gerais para todos os elementos, como width de imagens e margens de textos.

Com a tag header, podemos definir o cabeçalho do site de uma maneira simples, dentro do html, inserimos a logo, depois uma nav, com uma UL dentro e HREFS dentro da UL.

  <header>        Podemos alinhar da seguinte forma:
    <img>           - header com um diplay flex, para fazer com que todo o conteudo seja separado em duas partes
    <nav>           - uma parte com a logo, e a outra com a nav, possuindo a UL de HREFS |
      <ul>          - e então, justificamos seu conteudo com space-between para cada uma ficar em um canto, e alinhamos todos no centro
        <a> </a>    - depois de alinharmos ambos os conteudos, acessamos a UL e também aplicamos o display flex, para que as HREFS fiquem lado a lado
        <a> </a>    - também adicionamos flex-wrap: wrap, para que caso o site seja redimencionalizado, seus elementos passem para a linha de baixo para se enquadrar
        <a> </a>    - para manter um espaçamento legal e preservar todo o conteudo caso precisemos definir uma cor para o header, utilizamos um padding, para espaçar a logo do topo
      </ul>         - já que não possuimos tanto conteudo, podemos limitar a largura do header para que ele não se estique muito pelo dispositivo do úsuario
    </nav>          - e por fim, para alinharmos o conteudo ao centro, definimos uma margin: 0 auto.

                  Uma boa pratica é sempre definir um padding ás HREFS, já que para usuarios mobile e dispostivos com fontes pequenas, pode haver uma dificuldade para clicar na HREF.

                  Agora para RESPONSIVIDADE, primeiro devemos encontrar aonde se encontra o ponto de quebra, a largura de pixels que não se adapta ao layout padrão. Depois de o encontrar:
                    - Definimos um Media Querie (@media) alguns pixels antes do ponto de quebra, e alteramos as principais caracteristicas que não estão se adaptando bem ao dispositivo,
                    - como por exemplo, displays que inves de serem em Rows, se adaptam melhor como Columns, alinhamentos centrais e conteudos que podem ser removidos da interface do usuario.
                  
                  Um exemplo prático de como podemos fazer isto:

                  @media (max-width: 800px) {  - definimos uma media Querie para uma largura antes do ponto de quebra | max-width => 0 a 800px |
                    .header {                  - acessamos o header que está atrapalhando o layout
                      flex-direction: column;  - alternamos a direção do display flex, para colunas, fazendo com que se alinhem uma abaixo da outra; 
                      gap: 40px;               - definimos um gap padrao entre cada elemento
                      padding: 20px;           - conforme o layout se adapta, podemos definir um padding menor para ter menos espaçamento entre o header e o body
                    }
                    .header a {                - acessamos as HREFS do header
                      background: #f5f5f5;     - definimos uma cor padrao
                      border-radius: 4px;      - arredondamos o elemento 
                    }
                  }

